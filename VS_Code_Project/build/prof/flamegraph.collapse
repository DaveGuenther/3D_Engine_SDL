__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;TrianglePipeline::setPipelineFromMeshes(std::shared_ptr<Mesh_Pipeline>)<0000000000066580>;__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::operator++();__gnu_cxx::__scoped_lock::__scoped_lock(__gnu_cxx::__mutex&)<0000000000012950>;__gnu_cxx::__mutex::lock()<0000000000012a80> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;OBJ_Chunk::OBJ_Chunk(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >&, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&);OBJ_Lex_normal::lex(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000004ecd0>;std::__debug::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator[](unsigned long) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::operator++() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDetermineUV(Triangle&)<0000000000061eb0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > std::__miter_base<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0>;std::ceil(float)<00000000000469c0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Triangle::setUnitNormalFromPoints()<000000000007bbf0>;operator-(Vec3d const&, Vec3d const&)<000000000007d8d0>;Vec3d::Vec3d(float const&, float const&, float const&) 1
_init<000000000000a000>;ioctl@@GLIBC_2.2.5<000000000010c370> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;SDL_DYNAPI_entry 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDetermineAlphaX()<0000000000062110> 1
0x636e0a20204b4340;write 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__driDriverGetExtensions_swrast<00000000000c0c30>;tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000027940>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<00000000000277c0>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000027760>;tcmalloc::CentralFreeList::Populate()<0000000000027560> 1
pthread_mutex_lock@@GLIBC_2.2.5 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;__gnu_debug::operator!=(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> const&, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> const&)<000000000005e7a0>;bool __gnu_cxx::operator!=<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >(__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > > const&, __gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > > const&) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__niter_base<SDL_Color*>(SDL_Color*) 1
_dl_rtld_di_serinfo@@GLIBC_PRIVATE<0000000000008fa0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;Triangle::Triangle(Vec3d const&, Vec3d const&, Vec3d const&, Vec2d const&, Vec2d const&, Vec2d const&, int const&, SDL_Color, float, std::shared_ptr<TexturePNG>);Vec3d::Vec3d() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0>;f64xsubf128@@GLIBC_2.28<0000000000071480> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;__gnu_debug::_Safe_iterator_base::_M_singular() const<00000000000dd840> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_Texture_Blit::blit(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)<000000000005c8e0> 1
read@@GLIBC_2.2.5 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::~Engine_3D();std::shared_ptr<Mesh_Pipeline>::~shared_ptr();std::__shared_ptr<Mesh_Pipeline, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr<Mesh_Pipeline*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();Mesh_Pipeline::~Mesh_Pipeline();std::__debug::vector<Mesh, std::allocator<Mesh> >::~vector();std::__cxx1998::vector<Mesh, std::allocator<Mesh> >::~vector();void std::_Destroy<Mesh*, Mesh>(Mesh*, Mesh*, std::allocator<Mesh>&)[inline];void std::_Destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy_aux<false>::__destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy<Mesh>(Mesh*);Mesh::~Mesh()<00000000000543e0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&)[inline];void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026760>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
0x000055c0b0333fff;writev@@GLIBC_2.2.5<0000000000110470> 8
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_DYNAPI_entry 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
0x000055c0b032c85e;_XimOpenIM<0000000000069e70> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_Texture_Blit::blit(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)<000000000005c8e0> 1
__gnu_internal::get_mutex(unsigned char)<00000000000e0e80> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDetermineAlphaX()<0000000000062110> 1
0x45564f4d2020201f;write 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;SDL_DYNAPI_entry 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Triangle::~Triangle()<0000000000026760>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDetermineAlphaX()<0000000000062110> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;SDL_DYNAPI_entry 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_MapRGBA<0000000000042e10> 1
nouveau_drm_screen_create 1
_dl_find_dso_for_object@@GLIBC_PRIVATE<000000000000ba70>;_dl_audit_symbind_alt@@GLIBC_PRIVATE<0000000000017b50> 1
0x000000010000f9bc;pthread_mutex_unlock@@GLIBC_2.2.5 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0>;f64xsubf128@@GLIBC_2.28<0000000000071480> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_Vector_base(unsigned long, std::allocator<SDL_Color> const&);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_create_storage(unsigned long);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_allocate(unsigned long);std::allocator_traits<std::allocator<SDL_Color> >::allocate(std::allocator<SDL_Color>&, unsigned long)[inline];std::__new_allocator<SDL_Color>::allocate(unsigned long, void const*);tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000027940>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<00000000000277c0>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000027760>;tcmalloc::CentralFreeList::Populate()<0000000000027560>;tcmalloc::PageHeap::NewWithSizeClass(unsigned long, unsigned int)<0000000000027480>;tcmalloc::PageHeap::HandleUnlock(tcmalloc::PageHeap::LockingContext*)<00000000000272e0>;tcmalloc::EnterStacktraceScope()<000000000000b680> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;Triangle::getTextureRawPtr()<000000000007bb70>;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::get() const 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_MapRGBA<0000000000042e10> 1
_dl_find_dso_for_object@@GLIBC_PRIVATE<000000000000ba70>;_dl_mcount@@GLIBC_2.2.5<000000000000dda0> 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::~Engine_3D();std::shared_ptr<Renderer>::~shared_ptr();std::__shared_ptr<Renderer, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr<Renderer*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();Renderer::~Renderer();std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&)[inline];void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026760>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();void std::allocator_traits<std::allocator<void> >::destroy<TexturePNG>(std::allocator<void>&, TexturePNG*)[inline];void std::_Destroy<TexturePNG>(TexturePNG*);TexturePNG::~TexturePNG()<000000000003d8c0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&)[inline];void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy_aux<false>::__destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::~vector();std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::~vector();std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::~_Vector_base();std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_deallocate(SDL_Color*, unsigned long);std::allocator_traits<std::allocator<SDL_Color> >::deallocate(std::allocator<SDL_Color>&, SDL_Color*, unsigned long)[inline];std::__new_allocator<SDL_Color>::deallocate(SDL_Color*, unsigned long) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();__gnu_debug::_Safe_container<std::__debug::vector<Triangle, std::allocator<Triangle> >, std::allocator<Triangle>, __gnu_debug::_Safe_sequence, true>::~_Safe_container() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDetermineUV(Triangle&)<0000000000061eb0> 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDetermineUV(Triangle&)<0000000000061eb0> 1
__driDriverGetExtensions_swrast<00000000000c0c30> 1
_IO_vfprintf 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_DYNAPI_entry 1
0x000055c0b032cc44;_XimOpenIM<0000000000069e70> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;Triangle::getUVPoint(int)<000000000007c110> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
_XimLcctstowcs<000000000006dd20> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;__gnu_debug::operator!=(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> const&, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> const&)<000000000005e7a0>;__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >::base() const 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;std::__debug::vector<Triangle, std::allocator<Triangle> >::end() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;SDL_DYNAPI_entry 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;TrianglePipeline::orderPipelineByZ()<0000000000066870>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> std::__unguarded_partition_pivot<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__move_median_to_first<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);bool __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>::operator()<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>);Triangle::Triangle(Triangle const&);Vec3d::Vec3d();Vec2d::Vec2d() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;TrianglePipeline::setPipelineFromMeshes(std::shared_ptr<Mesh_Pipeline>)<0000000000066580>;std::__debug::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);void std::allocator_traits<std::allocator<Triangle> >::construct<Triangle, Triangle const&>(std::allocator<Triangle>&, Triangle*, Triangle const&)[inline];void std::__new_allocator<Triangle>::construct<Triangle, Triangle const&>(Triangle*, Triangle const&)[inline];Triangle::Triangle(Triangle const&) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDetermineUV(Triangle&)<0000000000061eb0> 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;SDL_DYNAPI_entry 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;TrianglePipeline::orderPipelineByZ()<0000000000066870>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__final_insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__unguarded_insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__unguarded_linear_insert<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Triangle, Triangle)>) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::drawFT_Scanline_prep(Triangle&)<0000000000061bf0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;Triangle::~Triangle()<0000000000026760>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;VectorMathService::clipTriangleWithPlane(Vec3d, Vec3d, Triangle&, Triangle&, Triangle&)<000000000007e0b0>;__nss_database_lookup@GLIBC_2.2.5<0000000000157730> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_Vector_base(unsigned long, std::allocator<SDL_Color> const&) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;VectorMathService::clipTriangleWithPlane(Vec3d, Vec3d, Triangle&, Triangle&, Triangle&)<000000000007e0b0>;VectorMathService::getSignedShortestDist(Vec3d&, Vec3d&, Vec3d&)<000000000007dff0>;Vec3d::Vec3d(Vec3d const&);Vec2d::Vec2d() 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Triangle::setUnitNormalFromPoints()<000000000007bbf0>;VectorMathService::crossProduct(Vec3d const&, Vec3d const&)<000000000007db40> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_Texture_Blit::blit(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)<000000000005c8e0>;SDL_Texture_Blit::inPixelRange(int const&, int const&)<000000000005c9e0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);bool __gnu_debug::__valid_range<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&);bool __gnu_debug::__valid_range_aux<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&, std::__false_type);bool __gnu_debug::__valid_range_aux<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::input_iterator_tag) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::~Engine_3D();std::shared_ptr<Mesh_Pipeline>::~shared_ptr();std::__shared_ptr<Mesh_Pipeline, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr<Mesh_Pipeline*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();Mesh_Pipeline::~Mesh_Pipeline();std::__debug::vector<Mesh, std::allocator<Mesh> >::~vector();std::__cxx1998::vector<Mesh, std::allocator<Mesh> >::~vector();void std::_Destroy<Mesh*, Mesh>(Mesh*, Mesh*, std::allocator<Mesh>&)[inline];void std::_Destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy_aux<false>::__destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy<Mesh>(Mesh*);Mesh::~Mesh()<00000000000543e0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&)[inline];void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026760>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();void std::allocator_traits<std::allocator<void> >::destroy<TexturePNG>(std::allocator<void>&, TexturePNG*)[inline];void std::_Destroy<TexturePNG>(TexturePNG*);TexturePNG::~TexturePNG()<000000000003d8c0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&)[inline];void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy_aux<false>::__destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDetermineUV(Triangle&)<0000000000061eb0> 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;std::floor(float)<00000000000469a0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0>;f64xsubf128@@GLIBC_2.28<0000000000071480> 1
0x78697274614d6571;memcpy@GLIBC_2.2.5<00000000000a78b0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;TrianglePipeline::setPipelineFromMeshes(std::shared_ptr<Mesh_Pipeline>)<0000000000066580>;__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::operator++();__gnu_cxx::__scoped_lock::__scoped_lock(__gnu_cxx::__mutex&)<0000000000012950> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;TrianglePipeline::setPipelineFromMeshes(std::shared_ptr<Mesh_Pipeline>)<0000000000066580>;std::__debug::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);void std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::_M_realloc_insert<Triangle const&>(__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle const&);Triangle* std::__uninitialized_move_if_noexcept_a<Triangle*, Triangle*, std::allocator<Triangle> >(Triangle*, Triangle*, Triangle*, std::allocator<Triangle>&);Triangle* std::__uninitialized_copy_a<Triangle const*, Triangle*, Triangle>(Triangle const*, Triangle const*, Triangle*, std::allocator<Triangle>&);Triangle* std::uninitialized_copy<Triangle const*, Triangle*>(Triangle const*, Triangle const*, Triangle*);Triangle* std::__uninitialized_copy<false>::__uninit_copy<Triangle const*, Triangle*>(Triangle const*, Triangle const*, Triangle*);Triangle* std::__do_uninit_copy<Triangle const*, Triangle*>(Triangle const*, Triangle const*, Triangle*);void std::_Construct<Triangle, Triangle const&>(Triangle*, Triangle const&);Triangle::Triangle(Triangle const&) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;std::__debug::vector<Triangle, std::allocator<Triangle> >::begin();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>::_Safe_iterator(__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, __gnu_debug::_Safe_sequence_base const*);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::_Safe_iterator(__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, __gnu_debug::_Safe_sequence_base const*);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::_Safe_iterator(__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, __gnu_debug::_Safe_sequence_base const*);__gnu_internal::get_mutex(unsigned char)<00000000000e0e80> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDimPixel(Triangle&)<0000000000061f90> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_DYNAPI_entry 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);bool __gnu_debug::__valid_range<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&);bool __gnu_debug::__valid_range_aux<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&, std::__false_type) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;VectorMathService::dotProduct(Vec3d const&, Vec3d const&)<000000000007dae0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::vector();__gnu_debug::_Safe_container<std::__debug::vector<Triangle, std::allocator<Triangle> >, std::allocator<Triangle>, __gnu_debug::_Safe_sequence, true>::_Safe_container();__gnu_debug::_Safe_sequence<std::__debug::vector<Triangle, std::allocator<Triangle> > >::_Safe_sequence();__gnu_debug::_Safe_sequence_base::_Safe_sequence_base()<0000000000015e20> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__copy_move_a1<false, SDL_Color const*, SDL_Color*>(SDL_Color const*, SDL_Color const*, SDL_Color*);SDL_Color* std::__copy_move_a2<false, SDL_Color const*, SDL_Color*>(SDL_Color const*, SDL_Color const*, SDL_Color*);__nss_database_lookup@GLIBC_2.2.5<0000000000157730> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDetermineAlphaX()<0000000000062110> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::~Engine_3D();std::shared_ptr<Mesh_Pipeline>::~shared_ptr();std::__shared_ptr<Mesh_Pipeline, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr<Mesh_Pipeline*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();Mesh_Pipeline::~Mesh_Pipeline();std::__debug::vector<Mesh, std::allocator<Mesh> >::~vector();std::__cxx1998::vector<Mesh, std::allocator<Mesh> >::~vector();void std::_Destroy<Mesh*, Mesh>(Mesh*, Mesh*, std::allocator<Mesh>&)[inline];void std::_Destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy_aux<false>::__destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy<Mesh>(Mesh*);Mesh::~Mesh()<00000000000543e0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&)[inline];void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026760>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();void std::allocator_traits<std::allocator<void> >::destroy<TexturePNG>(std::allocator<void>&, TexturePNG*)[inline];void std::_Destroy<TexturePNG>(TexturePNG*);TexturePNG::~TexturePNG()<000000000003d8c0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&)[inline];void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy_aux<false>::__destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::~vector();std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_get_Tp_allocator() 1
_dl_audit_symbind_alt@@GLIBC_PRIVATE<0000000000017b50> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDetermineUV(Triangle&)<0000000000061eb0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);bool __gnu_cxx::operator!=<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > > const&, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > > const&);__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >::base() const 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;std::__debug::vector<Triangle, std::allocator<Triangle> >::vector(std::__debug::vector<Triangle, std::allocator<Triangle> > const&);__gnu_debug::_Safe_vector<std::__debug::vector<Triangle, std::allocator<Triangle> >, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >::_Safe_vector(__gnu_debug::_Safe_vector<std::__debug::vector<Triangle, std::allocator<Triangle> >, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > > const&);__gnu_debug::_Safe_vector<std::__debug::vector<Triangle, std::allocator<Triangle> >, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >::_M_update_guaranteed_capacity();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::size() const 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;__gnu_debug::_Safe_iterator_base::_M_singular() const<00000000000dd840> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);bool __gnu_debug::__valid_range<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&);bool __gnu_debug::__valid_range_aux<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&, std::__false_type) 1
_init<000000000000a000>;ioctl@@GLIBC_2.2.5<000000000010c370> 15
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__copy_move_a<false, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__copy_move_a1<false, SDL_Color const*, SDL_Color*>(SDL_Color const*, SDL_Color const*, SDL_Color*);SDL_Color* std::__copy_move_a2<false, SDL_Color const*, SDL_Color*>(SDL_Color const*, SDL_Color const*, SDL_Color*);__nss_database_lookup@GLIBC_2.2.5<0000000000157730> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_Vector_base(unsigned long, std::allocator<SDL_Color> const&);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_create_storage(unsigned long);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_allocate(unsigned long);std::allocator_traits<std::allocator<SDL_Color> >::allocate(std::allocator<SDL_Color>&, unsigned long)[inline];std::__new_allocator<SDL_Color>::allocate(unsigned long, void const*);tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000027940>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<00000000000277c0>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000027760>;tcmalloc::CentralFreeList::Populate()<0000000000027560> 14
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;std::__debug::vector<Triangle, std::allocator<Triangle> >::vector(std::__debug::vector<Triangle, std::allocator<Triangle> > const&);std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::vector(std::__cxx1998::vector<Triangle, std::allocator<Triangle> > const&);std::__cxx1998::_Vector_base<Triangle, std::allocator<Triangle> >::_Vector_base(unsigned long, std::allocator<Triangle> const&);std::__cxx1998::_Vector_base<Triangle, std::allocator<Triangle> >::_Vector_impl::_Vector_impl(std::allocator<Triangle> const&);std::__cxx1998::_Vector_base<Triangle, std::allocator<Triangle> >::_Vector_impl_data::_Vector_impl_data() 1
0x000055c0b0333fff;__poll@@GLIBC_2.2.5<0000000000102f20> 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Triangle::Triangle(Triangle const&) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;Triangle::getTextureRawPtr()<000000000007bb70>;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::get() const 1
__nss_database_lookup@GLIBC_2.2.5<0000000000157730> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710> 1
llseek 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::~Engine_3D();std::shared_ptr<Mesh_Pipeline>::~shared_ptr();std::__shared_ptr<Mesh_Pipeline, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr<Mesh_Pipeline*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();Mesh_Pipeline::~Mesh_Pipeline();std::__debug::vector<Mesh, std::allocator<Mesh> >::~vector();std::__cxx1998::vector<Mesh, std::allocator<Mesh> >::~vector();void std::_Destroy<Mesh*, Mesh>(Mesh*, Mesh*, std::allocator<Mesh>&)[inline];void std::_Destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy_aux<false>::__destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy<Mesh>(Mesh*);Mesh::~Mesh()<00000000000543e0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&)[inline];void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026760>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count();std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release();std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();void std::allocator_traits<std::allocator<void> >::destroy<TexturePNG>(std::allocator<void>&, TexturePNG*)[inline];void std::_Destroy<TexturePNG>(TexturePNG*);TexturePNG::~TexturePNG()<000000000003d8c0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::~vector();void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&)[inline];void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy_aux<false>::__destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Destroy<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::~vector();std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::~vector();std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::~_Vector_base();std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_deallocate(SDL_Color*, unsigned long);std::allocator_traits<std::allocator<SDL_Color> >::deallocate(std::allocator<SDL_Color>&, SDL_Color*, unsigned long)[inline];std::__new_allocator<SDL_Color>::deallocate(SDL_Color*, unsigned long);tcmalloc::ThreadCache::ListTooLong(tcmalloc::ThreadCache::FreeList*, unsigned int)<0000000000026710>;tcmalloc::ThreadCache::ReleaseToCentralCache(tcmalloc::ThreadCache::FreeList*, unsigned int, int)<0000000000026390>;tcmalloc::CentralFreeList::InsertRange(void*, void*, int)<00000000000262b0>;tcmalloc::CentralFreeList::ReleaseListToSpans(void*)<0000000000026020>;tcmalloc::CentralFreeList::ReleaseToSpans(void*)<0000000000025f00> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_Texture_Blit::blit(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)<000000000005c8e0> 2
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::projectTriangle3d(Triangle&)<0000000000064380>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005d7f0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);void std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::_M_realloc_insert<Triangle const&>(__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle const&) 1
pthread_mutex_trylock@GLIBC_2.2.5 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000061710>;TexturePNG::getPixelAtSurfaceUV(float const&, float const&, SDL_Color&)<00000000000464d0> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__niter_wrap<SDL_Color*>(SDL_Color* const&, SDL_Color*) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;MaterialMapper::doMap(std::shared_ptr<MTL>, std::shared_ptr<TextureList>)<0000000000039980>;TextureList::insertOrAssignTexture(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cbe0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_Vector_base(unsigned long, std::allocator<SDL_Color> const&);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_create_storage(unsigned long);std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_allocate(unsigned long);std::allocator_traits<std::allocator<SDL_Color> >::allocate(std::allocator<SDL_Color>&, unsigned long)[inline];std::__new_allocator<SDL_Color>::allocate(unsigned long, void const*);tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000027940>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<00000000000277c0>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000027760>;tcmalloc::CentralFreeList::Populate()<0000000000027560> 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::load_meshes()<0000000000022860>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000072610>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::buildMesh(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<00000000000510a0>;OBJ::assembleChunks()<0000000000052970>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003cdb0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&)[inline];void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);TexturePNG::TexturePNG(TexturePNG const&)<000000000003dcb0>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);void std::_Construct<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);SDL_Color* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, SDL_Color>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*, std::allocator<SDL_Color>&);SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);bool __gnu_debug::__valid_range<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&);bool __gnu_debug::__valid_range_aux<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&, std::__false_type);__gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type __gnu_debug::__get_distance<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >);__gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type __gnu_debug::__get_distance<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::random_access_iterator_tag);__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >::difference_type __gnu_cxx::operator-<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > const&, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > const&) 1
__libc_init_first@@GLIBC_2.2.5<0000000000027c40>;main<000000000000a860>;Engine_3D::engine_update()<0000000000022a20>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000065220>;Renderer::drawFilledTriangle2d(Triangle)<0000000000063d40>;TexturemapRasterizer::drawTriangle(Triangle&)<0000000000060800>;TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000061850>;TexturemapRasterizer::texelDrawUV_Point()<0000000000062060>;SDL_Texture_Blit::blit(unsigned int, unsigned int, unsigned char, unsigned char, unsigned char, unsigned char)<000000000005c8e0> 1
inflate<000000000000c680> 1
