_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;std::__debug::vector<Triangle, std::allocator<Triangle> >::begin();Mesh::Mesh(Mesh const&)<000000000005d6e0>;std::__debug::vector<Triangle, std::allocator<Triangle> >::vector(std::__debug::vector<Triangle, std::allocator<Triangle> > const&);std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::vector(std::__cxx1998::vector<Triangle, std::allocator<Triangle> > const&);Triangle* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*, Triangle>(__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, __gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*, std::allocator<Triangle>&);Triangle* std::uninitialized_copy<__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*>(__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, __gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*);Triangle* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*>(__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, __gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*);Triangle* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*>(__gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, __gnu_cxx::__normal_iterator<Triangle const*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle*);void std::_Construct<Triangle, Triangle const&>(Triangle*, Triangle const&);Triangle::Triangle(Triangle const&);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::_M_attach(__gnu_debug::_Safe_sequence_base*);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator=(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag> const&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);InOutRasterizer::isPixelContainedIn2dTriangle(int, int);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::operator bool() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();SDL_CreateThread<000000000003c470>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;0x00007f03803e7791;0x00007f03803e6b56;0x00007f03803e675a;0x00007f03803e1f6c;0x00007f03803f10b3;0x00007f03803f5473;0x00007f03803ed1ee;0x00007f03803ed13e;0x00007f03803eca20;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();MaterialMapper::doMap(std::shared_ptr<MTL>, std::shared_ptr<TextureList>)<000000000003aca0>;__gnu_debug::operator==(__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag> const&, __gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag> const&);TexturePNG::TexturePNG(char const*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);SDL_Color& std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::emplace_back<SDL_Color>(SDL_Color&&);SDL_Color& std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::emplace_back<SDL_Color>(SDL_Color&&);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::back();std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::empty() const;__gnu_debug::_Error_formatter& __gnu_debug::_Error_formatter::_M_iterator<__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag> >(__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag> const&, char const*);tuple 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;__gnu_debug::_Safe_vector<std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >::_M_update_guaranteed_capacity();std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::size() const;f64xsubf128@@GLIBC_2.28<000000000006ca60> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_dereferenceable() const;std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::get_allocator() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);SDL_Color* std::__niter_base<SDL_Color*>(SDL_Color*) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::size() const;_init<000000000000a000> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::operator*() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_dereferenceable() const;bool __gnu_debug::__valid_range<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&);bool __gnu_debug::__valid_range_aux<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&, std::__false_type);__gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type __gnu_debug::__get_distance<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >);std::_Hash_impl::hash(void const*, unsigned long, unsigned long);std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>::_M_bucket_index(unsigned long, unsigned long) const;std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*, unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);Triangle::getDistanceToCamera(Vec3d);~vector;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long);__gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;~__shared_count 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;TrianglePipeline::orderPipelineByZ()<000000000006a250>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> std::__unguarded_partition_pivot<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> std::__unguarded_partition<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);bool __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>::operator()<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>);shared_ptr;Vec3d::Vec3d() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
__glDispatchCheckMultithreaded<0000000000042ed0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;tc_calloc;do_calloc[inline];do_malloc_or_cpp_alloc[inline];do_malloc[inline];tcmalloc::ThreadCache::Allocate(unsigned long, unsigned int, void* (*)(unsigned long))[inline];tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000029620>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<0000000000025d70>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>[inline];tcmalloc::CentralFreeList::Populate()<0000000000025a70> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);__gnu_debug::_Safe_vector<std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >::_M_update_guaranteed_capacity() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;TrianglePipeline::orderPipelineByZ()<000000000006a250>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__final_insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__unguarded_insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__unguarded_linear_insert<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>::operator--();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator--();_Node_const_iterator;void std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_assign_elements<std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&>(std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> > const&);_ReuseOrAllocNode;pthread_mutex_trylock@GLIBC_2.2.5 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;~__shared_count 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use();__gnu_cxx::__exchange_and_add_dispatch(int*, int)[inline];std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::end();~__scoped_lock 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005f710>;std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy();__gnu_cxx::__atomic_add_dispatch(int*, int)[inline];std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::size() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);__gnu_debug::_Error_formatter& __gnu_debug::_Error_formatter::_M_iterator<__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag> >(__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag> const&, char const*) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 3
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;Triangle::getDistanceToCamera(Vec3d);~vector;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long);__gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) 4
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;OBJ_Chunk::OBJ_Chunk(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >&, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&);OBJ_Lex_triFace::lex(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<0000000000051770>;__gnu_cxx::__enable_if<!std::__are_same<int, bool>::__value, void>::__type std::__debug::vector<int, std::allocator<int> >::push_back<int>(int&&);int& std::__debug::vector<int, std::allocator<int> >::emplace_back<int>(int&&);int& std::__cxx1998::vector<int, std::allocator<int> >::emplace_back<int>(int&&);void std::__cxx1998::vector<int, std::allocator<int> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<int*, std::__cxx1998::vector<int, std::allocator<int> > >, int&&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long);std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;vector;f64xsubf128@@GLIBC_2.28<000000000006ca60> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_incrementable() const;std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_allocate(unsigned long);__gnu_cxx::__throw_concurrence_lock_error();std::__new_allocator<SDL_Color>::allocate(unsigned long, void const*);tc_new;operator new(unsigned long)[inline] 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();SDL_CreateThread<000000000003c470>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;0x00007f03803e7791;0x00007f03803e6b56;0x00007f03803e675a;0x00007f03803e1f9d;0x00007f03803e1b4e;0x00007f03803e127c;0x00007f03803ed2ec;0x00007f03803ed1bb;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::split_OBJ_Chunks()<0000000000053620>;__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx1998::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__debug::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >, std::forward_iterator_tag>::operator*() const;std::istream::seekg(std::fpos<__mbstate_t>)<000000000011fb30>;std::basic_streambuf<char, std::char_traits<char> >::pubseekpos(std::fpos<__mbstate_t>, std::_Ios_Openmode)[inline];std::basic_filebuf<char, std::char_traits<char> >::seekpos(std::fpos<__mbstate_t>, std::_Ios_Openmode);std::basic_filebuf<char, std::char_traits<char> >::_M_seek(long, std::_Ios_Seekdir, __mbstate_t);lseek64 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;tc_calloc;do_calloc[inline];do_malloc_or_cpp_alloc[inline];do_malloc[inline];tcmalloc::ThreadCache::Allocate(unsigned long, unsigned int, void* (*)(unsigned long))[inline];tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000029620>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<0000000000025d70>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>[inline];tcmalloc::CentralFreeList::Populate()<0000000000025a70> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();SDL_CreateThread<000000000003c470>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;0x00007f03803e1bfe;0x00007f03803e1b4e;0x00007f03803e16df;0x00007f03803e9a5a;__close@@GLIBC_2.2.5<00000000000f7540> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005f710>;VectorMathService::clipTriangleWithPlane(Vec3d, Vec3d, Triangle&, Triangle&, Triangle&)<0000000000082450>;VectorMathService::getSignedShortestDist(Vec3d&, Vec3d&, Vec3d&)<0000000000082330>;VectorMathService::getVectorLength(Vec3d const&);~basic_string 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::~Engine_3D();std::__shared_ptr_access<InGame_Action_Updater, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const;~__shared_ptr;std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const;std::_Sp_counted_ptr<Renderer*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();Renderer::~Renderer()<0000000000026230>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&);void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026590>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const;std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();void std::allocator_traits<std::allocator<void> >::destroy<TexturePNG>(std::allocator<void>&, TexturePNG*);void std::_Destroy<TexturePNG>(TexturePNG*);basic_string;__gnu_debug::_Error_formatter& __gnu_debug::_Error_formatter::_M_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* const&, char const*);__gnu_debug::_Distance_traits<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__is_integer<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>::__type>::__type __gnu_debug::__get_distance<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);__gnu_debug::_Distance_traits<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__is_integer<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>::__type>::__type __gnu_debug::__get_distance<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::random_access_iterator_tag);std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_allocate_buckets(unsigned long);__gnu_debug::_Safe_container<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<SDL_Color>, __gnu_debug::_Safe_sequence, true>::~_Safe_container() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;__gnu_debug::_Safe_vector<std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >::_M_update_guaranteed_capacity() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 5
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();SDL_CreateThread<000000000003c470>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;_XimOpenIM<0000000000063610>;_XimLocalOpenIM<000000000006b8e0>;_XimLocalWcLookupString<000000000006a790>;_XimOpenIM<0000000000063610>;fgetc 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;_Vector_impl 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_SetRenderDrawColor<000000000003d610> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_validate<0000000000005ba0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;Triangle::getDistanceToCamera(Vec3d);~vector;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005f710>;VectorMathService::clipTriangleWithPlane(Vec3d, Vec3d, Triangle&, Triangle&, Triangle&)<0000000000082450>;std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy();__gnu_cxx::__atomic_add_dispatch(int*, int)[inline];VectorMathService::getUnitVector(Vec3d&)<0000000000081e10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;__gnu_debug::operator!=(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> const&, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> const&);std::__debug::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);void std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::_M_realloc_insert<Triangle const&>(__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, Triangle const&);void std::allocator_traits<std::allocator<Triangle> >::construct<Triangle, Triangle const&>(std::allocator<Triangle>&, Triangle*, Triangle const&);void std::__new_allocator<Triangle>::construct<Triangle, Triangle const&>(Triangle*, Triangle const&);Triangle::Triangle(Triangle const&);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::_M_attach(__gnu_debug::_Safe_sequence_base*);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator=(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag> const&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0>;nouveau_pushbuf_space<0000000000005630>;nouveau_pushbuf_data<0000000000004a40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000063370> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();Renderer::Renderer(int, int, std::shared_ptr<Camera>);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000029620>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<0000000000025d70>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>[inline];tcmalloc::CentralFreeList::Populate()<0000000000025a70> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;TrianglePipeline::orderPipelineByZ()<000000000006a250>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> std::__unguarded_partition_pivot<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> std::__unguarded_partition<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);bool __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>::operator()<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>);Triangle::~Triangle()<0000000000026590>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::_Vector_base<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::_Vector_base(unsigned long, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > const&);~_Hashtable;std::__cxx1998::_Vector_base<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::_M_allocate(unsigned long);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*);std::__new_allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >::allocate(unsigned long, void const*);tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000029620>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<0000000000025d70>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>[inline];tcmalloc::CentralFreeList::Populate()<0000000000025a70> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
__glDispatchCheckMultithreaded<0000000000042ed0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::~Engine_3D();std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, IAction*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IAction*> > >::end();UseAction*& std::__get_helper<0ul, UseAction*&&>(std::_Tuple_impl<0ul, UseAction*&&>&);std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const;std::_Sp_counted_ptr<Mesh_Pipeline*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();std::__debug::vector<Mesh, std::allocator<Mesh> >::push_back(Mesh const&);vector;std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);bool __gnu_debug::__valid_range_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::input_iterator_tag);void std::_Destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy_aux<false>::__destroy<Mesh*>(Mesh*, Mesh*);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);Mesh::~Mesh()<0000000000056310>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&);void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026590>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const;std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();void std::allocator_traits<std::allocator<void> >::destroy<TexturePNG>(std::allocator<void>&, TexturePNG*);void std::_Destroy<TexturePNG>(TexturePNG*);basic_string;__gnu_debug::_Error_formatter& __gnu_debug::_Error_formatter::_M_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* const&, char const*);__gnu_debug::_Distance_traits<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__is_integer<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>::__type>::__type __gnu_debug::__get_distance<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);__gnu_debug::_Distance_traits<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__is_integer<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>::__type>::__type __gnu_debug::__get_distance<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::random_access_iterator_tag);std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_allocate_buckets(unsigned long);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::~vector();__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_is_begin() const;std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_deallocate(SDL_Color*, unsigned long);pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, 0UL, TexturePNG &, 0UL>;pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, 0UL, TexturePNG &, 0UL>;tcmalloc::ThreadCache::Scavenge()<0000000000029ae0>;tcmalloc::ThreadCache::ReleaseToCentralCache(tcmalloc::ThreadCache::FreeList*, unsigned int, int)<0000000000029750>;tcmalloc::CentralFreeList::InsertRange(void*, void*, int)<00000000000258c0>;tcmalloc::CentralFreeList::ReleaseListToSpans(void*)<0000000000025640>;tcmalloc::CentralFreeList::ReleaseToSpans(void*)<0000000000025490>;tcmalloc::PageHeap::Delete(tcmalloc::Span*)<0000000000027960>;tcmalloc::PageHeap::MergeIntoFreeList(tcmalloc::Span*)<00000000000272a0>;tcmalloc::PageHeap::CheckAndHandlePreMerge(tcmalloc::Span*, tcmalloc::Span*)<0000000000026530>;tcmalloc::DLL_Remove(tcmalloc::Span*)<0000000000028300> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);__gnu_debug::_Safe_vector<std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >::_M_update_guaranteed_capacity() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;_Safe_sequence 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();Renderer::Renderer(int, int, std::shared_ptr<Camera>);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;__glx_Main<0000000000053fd0>;__glx_Main<0000000000053fd0>;glAreTexturesResidentEXT<0000000000045960>;dlopen@@GLIBC_2.34;dlerror@GLIBC_2.2.5;_dl_catch_error@@GLIBC_PRIVATE<000000000014fdd0>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;dlmopen@@GLIBC_2.34;_dl_find_dso_for_object@@GLIBC_PRIVATE<000000000000b770>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;_dl_rtld_di_serinfo@@GLIBC_PRIVATE<0000000000008e00>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;__nptl_change_stack_perm@@GLIBC_PRIVATE<0000000000003a70>;__nptl_change_stack_perm@@GLIBC_PRIVATE<0000000000003a70>;llvm::orc::ELFNixPlatform::notifyRemoving(llvm::orc::ResourceTracker&)@@LLVM_14<0000000000a61e56>;llvm::cl::Option::addArgument()@@LLVM_14<0000000000bb50c0>;llvm::cl::AddLiteralOption(llvm::cl::Option&, llvm::StringRef)@@LLVM_14<0000000000bb3f40>;llvm::cl::TokenizeWindowsCommandLineNoCopy(llvm::StringRef, llvm::StringSaver&, llvm::SmallVectorImpl<llvm::StringRef>&)@@LLVM_14<0000000000bb3c50>;llvm::StringMapImpl::LookupBucketFor(llvm::StringRef)@@LLVM_14<0000000000c49b90> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_glapi_tls_Context<0000000000000008> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatTopTri(Triangle&)<0000000000063370> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;Clipper::getClippedTrisAgainstFrustum(Triangle&)<000000000005f710>;VectorMathService::clipTriangleWithPlane(Vec3d, Vec3d, Triangle&, Triangle&, Triangle&)<0000000000082450>;Triangle::operator=(Triangle const&);VectorMathService::vectorIntersectPlane(Vec3d&, Vec3d&, Vec3d&, Vec3d&, float&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::operator++() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 3
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0>;nouveau_pushbuf_data<0000000000004a40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);Triangle::getDistanceToCamera(Vec3d);~vector;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);SDL_Color* std::__niter_base<SDL_Color*>(SDL_Color*) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::projectTriangle3d(Triangle&)<0000000000067af0>;Triangle::Triangle() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;Triangle::getDistanceToCamera(Vec3d);~vector;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::~Engine_3D();std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, IAction*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, IAction*> > >::end();UseAction*& std::__get_helper<0ul, UseAction*&&>(std::_Tuple_impl<0ul, UseAction*&&>&);std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const;std::_Sp_counted_ptr<Mesh_Pipeline*, (__gnu_cxx::_Lock_policy)2>::_M_dispose();std::__debug::vector<Mesh, std::allocator<Mesh> >::push_back(Mesh const&);vector;std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);bool __gnu_debug::__valid_range_aux<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::input_iterator_tag);void std::_Destroy<Mesh*>(Mesh*, Mesh*);void std::_Destroy_aux<false>::__destroy<Mesh*>(Mesh*, Mesh*);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*);Mesh::~Mesh()<0000000000056310>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&);void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026590>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const;std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose();void std::allocator_traits<std::allocator<void> >::destroy<TexturePNG>(std::allocator<void>&, TexturePNG*);void std::_Destroy<TexturePNG>(TexturePNG*);basic_string;__gnu_debug::_Error_formatter& __gnu_debug::_Error_formatter::_M_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* const&, char const*);__gnu_debug::_Distance_traits<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__is_integer<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>::__type>::__type __gnu_debug::__get_distance<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);__gnu_debug::_Distance_traits<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__is_integer<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>::__type>::__type __gnu_debug::__get_distance<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::random_access_iterator_tag);std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true>*);std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >::_M_allocate_buckets(unsigned long);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::~vector();__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_is_begin() const;std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_deallocate(SDL_Color*, unsigned long);pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, 0UL, TexturePNG &, 0UL>;pair<const std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > &, 0UL, TexturePNG &, 0UL>;tcmalloc::ThreadCache::ListTooLong(tcmalloc::ThreadCache::FreeList*, unsigned int)<0000000000029b80>;tcmalloc::ThreadCache::ReleaseToCentralCache(tcmalloc::ThreadCache::FreeList*, unsigned int, int)<0000000000029750>;tcmalloc::CentralFreeList::InsertRange(void*, void*, int)<00000000000258c0>;tcmalloc::CentralFreeList::ReleaseListToSpans(void*)<0000000000025640>;tcmalloc::CentralFreeList::ReleaseToSpans(void*)<0000000000025490>;SpinLockHolder::~SpinLockHolder()[inline];SpinLock::Unlock()[inline] 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 4
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;vector;f64xsubf128@@GLIBC_2.28<000000000006ca60> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::__shared_ptr_access<Camera, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::char_traits<char>::compare(char const*, char const*, unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;__gnu_debug::_Safe_vector<std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >::_M_update_guaranteed_capacity() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_dereferenceable() const;bool __gnu_debug::__valid_range<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&);bool __gnu_debug::__valid_range_aux<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_debug::_Distance_traits<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, std::__is_integer<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > > >::__type>::__type&, std::__false_type);TexturePNG::operator=(TexturePNG const&);std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&> std::forward_as_tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();SDL_CreateThread<000000000003c470>;SDL_CreateThread<000000000003c470>;SDL_DYNAPI_entry;dlopen@@GLIBC_2.34;dlerror@GLIBC_2.2.5;_dl_catch_error@@GLIBC_PRIVATE<000000000014fdd0>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;dlmopen@@GLIBC_2.34;_dl_find_dso_for_object@@GLIBC_PRIVATE<000000000000b770>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;_dl_rtld_di_serinfo@@GLIBC_PRIVATE<0000000000008e00>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;_dl_find_dso_for_object@@GLIBC_PRIVATE<000000000000b770>;_dl_debug_state@@GLIBC_PRIVATE<0000000000002090>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;_dl_debug_state@@GLIBC_PRIVATE<0000000000002090>;__nptl_change_stack_perm@@GLIBC_PRIVATE<0000000000003a70>;__nptl_change_stack_perm@@GLIBC_PRIVATE<0000000000003a70> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0>;nouveau_pushbuf_space<0000000000005630>;nouveau_pushbuf_data<0000000000004a40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);SDL_Color* std::__niter_base<SDL_Color*>(SDL_Color*) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);Triangle::getDistanceToCamera(Vec3d);~vector;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long);__gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_incrementable() const;std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_allocate(unsigned long);__gnu_cxx::__throw_concurrence_lock_error();std::__new_allocator<SDL_Color>::allocate(unsigned long, void const*);tc_new;operator new(unsigned long)[inline];tcmalloc::SizeMap::ByteSizeForClass(unsigned int)[inline] 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const&);~__shared_count;__gnu_debug::_Safe_vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >::_M_update_guaranteed_capacity() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();SDL_CreateThread<000000000003c470>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;0x00007f03803e7791;0x00007f03803e6b56;0x00007f03803e66ee;0x00007f03803e1b4e;0x00007f03803e1355;0x00007f03803f12ea;0x00007f03803ed150 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;OBJ_Chunk::OBJ_Chunk(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >&, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&);void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag);_Guard;std::__new_allocator<char>::max_size() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();Renderer::Renderer(int, int, std::shared_ptr<Camera>);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;__glx_Main<0000000000053fd0>;glIsTextureEXT<0000000000028e50> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__nss_database_lookup@GLIBC_2.2.5<0000000000152d10> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;std::__debug::vector<int, std::allocator<int> >::operator[](unsigned long);std::__cxx1998::vector<int, std::allocator<int> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;__shared_count;__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::_M_is_end() const;std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;tc_calloc;do_calloc[inline];do_malloc_or_cpp_alloc[inline];do_malloc[inline];tcmalloc::ThreadCache::Allocate(unsigned long, unsigned int, void* (*)(unsigned long))[inline];tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000029620>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<0000000000025d70>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>[inline];tcmalloc::CentralFreeList::Populate()<0000000000025a70> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_SetRenderDrawColor<000000000003d610> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;OBJ_Chunk::OBJ_Chunk(std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >&, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > > const&);std::__debug::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&);std::__cxx11::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >::basic_stringstream(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::_Ios_Openmode);std::basic_iostream<char, std::char_traits<char> >::basic_iostream()[inline];std::basic_istream<char, std::char_traits<char> >::basic_istream()[inline];std::basic_ios<char, std::char_traits<char> >::init(std::basic_streambuf<char, std::char_traits<char> >*);std::basic_ios<char, std::char_traits<char> >::_M_cache_locale(std::locale const&);bool std::has_facet<std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > > >(std::locale const&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_incrementable() const;std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_allocate(unsigned long);__gnu_cxx::__throw_concurrence_lock_error();std::__new_allocator<SDL_Color>::allocate(unsigned long, void const*);tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000029620>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<0000000000025d70>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>[inline];tcmalloc::CentralFreeList::Populate()<0000000000025a70> 3
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0>;nouveau_pushbuf_data<0000000000004a40> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;TrianglePipeline::orderPipelineByZ()<000000000006a250>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__introsort_loop<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> std::__unguarded_partition_pivot<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> std::__unguarded_partition<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);bool __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>::operator()<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>);Triangle::Triangle(Triangle const&);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::_M_attach(__gnu_debug::_Safe_sequence_base*);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&);__gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;TrianglePipeline::orderPipelineByZ()<000000000006a250>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__final_insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__unguarded_insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::bidirectional_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::operator++();__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::_M_incrementable() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create 6
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Triangle::Triangle(Triangle const&);__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::forward_iterator_tag>::_M_attach(__gnu_debug::_Safe_sequence_base*);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&);__gnu_cxx::__alloc_traits<std::allocator<char>, char>::_S_select_on_copy(std::allocator<char> const&) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;_Safe_sequence 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::split_OBJ_Chunks()<0000000000053620>;std::basic_istream<char, std::char_traits<char> >& std::getline<char, std::char_traits<char>, std::allocator<char> >(std::basic_istream<char, std::char_traits<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, char);std::basic_streambuf<char, std::char_traits<char> >::sgetc()[inline];std::basic_streambuf<char, std::char_traits<char> >::sgetc()[inline];std::basic_filebuf<char, std::char_traits<char> >::underflow();std::__basic_file<char>::xsgetn(char*, long);std::__basic_file<char>::xsgetn(char*, long)[inline];read@@GLIBC_2.2.5 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create 4
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0>;nouveau_pushbuf_space<0000000000005630> 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);Triangle::getDistanceToCamera(Vec3d) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;InOutRasterizer::isPixelContainedIn2dTriangle(int, int) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();SDL_CreateThread<000000000003c470>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;0x00007f03803e7791;0x00007f03803e6b56;0x00007f03803e66ee;0x00007f03803e1b4e;0x00007f03803e1355;0x00007f03803f13a5;0x00007f03803e9d2a;readlinkat@@GLIBC_2.4<00000000000f86b0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_refn<0000000000005d80> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::operator[](unsigned long);_Parameter<SDL_Color> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_space<0000000000005630>;nouveau_pushbuf_data<0000000000004a40>;nouveau_pushbuf_data<0000000000004a40>;drmCommandWriteRead<000000000000a8d0>;drmIoctl<0000000000007300>;ioctl@@GLIBC_2.2.5<00000000000fc9b0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;Mesh::add3dTriangle(Triangle&)<000000000007be00>;std::__debug::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);void std::allocator_traits<std::allocator<Triangle> >::construct<Triangle, Triangle const&>(std::allocator<Triangle>&, Triangle*, Triangle const&);void std::__new_allocator<Triangle>::construct<Triangle, Triangle const&>(Triangle*, Triangle const&);Triangle::Triangle(Triangle const&);Vec3d::Vec3d() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;__gnu_debug::_Safe_iterator<std::__detail::_Node_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, false, true>, std::__debug::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TexturePNG, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG> > >, std::forward_iterator_tag>::_M_incrementable() const;std::__cxx1998::_Vector_base<SDL_Color, std::allocator<SDL_Color> >::_M_allocate(unsigned long);__gnu_cxx::__throw_concurrence_lock_error();std::__new_allocator<SDL_Color>::allocate(unsigned long, void const*);tcmalloc::ThreadCache::FetchFromCentralCache(unsigned int, int, void* (*)(unsigned long))<0000000000029620>;tcmalloc::CentralFreeList::RemoveRange(void**, void**, int)<0000000000025d70>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>;tcmalloc::CentralFreeList::FetchFromOneSpansSafe(int, void**, void**)<0000000000025d10>[inline];tcmalloc::CentralFreeList::Populate()<0000000000025a70>;tcmalloc::PageHeap::New(unsigned long)<0000000000027cb0>;tcmalloc::PageHeap::Carve(tcmalloc::Span*, unsigned long)<00000000000271a0>;tcmalloc::NewSpan(unsigned long, unsigned long)<00000000000281e0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();Renderer::Renderer(int, int, std::shared_ptr<Camera>);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;__glx_Main<0000000000053fd0>;__glx_Main<0000000000053fd0>;glAreTexturesResidentEXT<0000000000045960>;dlopen@@GLIBC_2.34;dlerror@GLIBC_2.2.5;_dl_catch_error@@GLIBC_PRIVATE<000000000014fdd0>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;dlmopen@@GLIBC_2.34;_dl_find_dso_for_object@@GLIBC_PRIVATE<000000000000b770>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;_dl_rtld_di_serinfo@@GLIBC_PRIVATE<0000000000008e00>;_dl_catch_exception@@GLIBC_PRIVATE<000000000014fcd0>;_dl_find_dso_for_object@@GLIBC_PRIVATE<000000000000b770>;_dl_mcount@@GLIBC_2.2.5<000000000000dbc0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 2
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;TrianglePipeline::orderPipelineByZ()<000000000006a250>;void std::sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle)>(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, bool (*)(Triangle, Triangle));void std::__sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__final_insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__insertion_sort<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(Triangle, Triangle)>);void std::__unguarded_linear_insert<__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Triangle, Triangle)> >(__gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Triangle, Triangle)>);bool __gnu_cxx::__ops::_Val_comp_iter<bool (*)(Triangle, Triangle)>::operator()<Triangle, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag> >(Triangle&, __gnu_debug::_Safe_iterator<__gnu_cxx::__normal_iterator<Triangle*, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >, std::__debug::vector<Triangle, std::allocator<Triangle> >, std::random_access_iterator_tag>);Triangle::Triangle(Triangle const&);Vec3d::Vec3d() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;InOutRasterizer::isPixelContainedIn2dTriangle(int, int) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;__gnu_debug::_Safe_vector<std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >::_M_update_guaranteed_capacity() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::load_meshes()<0000000000023880>;Mesh_Pipeline::Add_OBJ_Mesh_to_Pipeline(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Vec3d, Vec3d)<0000000000075ff0>;OBJ::OBJ(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<TextureList>);OBJ::split_OBJ_Chunks();OBJ::assembleChunks()<0000000000054830>;TextureList::getTextureByFilename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)<000000000003e2c0>;std::shared_ptr<std::enable_if<!is_array<TexturePNG>::value, TexturePNG>::type> std::make_shared<TexturePNG, TexturePNG&>(TexturePNG&);std::shared_ptr<TexturePNG>::shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<void>, TexturePNG&>(std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<TexturePNG, std::allocator<void>, TexturePNG&>(TexturePNG*&, std::_Sp_alloc_shared_tag<std::allocator<void> >, TexturePNG&);std::_Sp_counted_ptr_inplace<TexturePNG, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<TexturePNG&>(std::allocator<void>, TexturePNG&);void std::allocator_traits<std::allocator<void> >::construct<TexturePNG, TexturePNG&>(std::allocator<void>&, TexturePNG*, TexturePNG&);void std::_Construct<TexturePNG, TexturePNG&>(TexturePNG*, TexturePNG&);vector;std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__debug::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > >::vector(std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > const&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > >&);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::uninitialized_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__uninitialized_copy<false>::__uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >* std::__do_uninit_copy<__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*>(__gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, __gnu_cxx::__normal_iterator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > const*, std::__cxx1998::vector<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >, std::allocator<std::__debug::vector<SDL_Color, std::allocator<SDL_Color> > > > >, std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >*);std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TexturePNG>, true> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long);~_Safe_unordered_container_base;std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::vector(std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > const&);_Safe_iterator;SDL_Color* std::uninitialized_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*);SDL_Color* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*>(__gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, __gnu_cxx::__normal_iterator<SDL_Color const*, std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> > >, SDL_Color*) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;_Safe_sequence 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::Engine_3D();Renderer::Renderer(int, int, std::shared_ptr<Camera>);SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;MesaGLInteropGLXExportObject<00000000000361f0>;__glx_Main<0000000000053fd0>;glIsTextureEXT<0000000000028e50> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);Triangle::getDistanceToCamera(Vec3d);~vector;std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2> const&);std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480>;__driDriverGetExtensions_d3d12<00000000000b3480> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long) 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);~__shared_count 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);ScanlineRasterizer::drawFlatTopTri(Triangle&, SDL_Color);TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40>;std::__debug::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::__cxx1998::vector<SDL_Color, std::allocator<SDL_Color> >::operator[](unsigned long);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release_last_use_cold() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;TrianglePipeline::setPipelineFromMeshes(std::shared_ptr<Mesh_Pipeline>)<0000000000069f80>;std::__debug::vector<Triangle, std::allocator<Triangle> >::push_back(Triangle const&);__gnu_debug::_Safe_vector<std::__debug::vector<Triangle, std::allocator<Triangle> >, std::__cxx1998::vector<Triangle, std::allocator<Triangle> > >::_M_update_guaranteed_capacity();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::size() const 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_pushbuf_refn<00000000000059a0>;nouveau_pushbuf_space<0000000000005630>;nouveau_pushbuf_data<0000000000004a40> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;SDL_DYNAPI_entry;SDL_DYNAPI_entry 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;std::__debug::vector<Triangle, std::allocator<Triangle> >::~vector();std::__cxx1998::vector<Triangle, std::allocator<Triangle> >::~vector();void std::_Destroy<Triangle*, Triangle>(Triangle*, Triangle*, std::allocator<Triangle>&);void std::_Destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy_aux<false>::__destroy<Triangle*>(Triangle*, Triangle*);void std::_Destroy<Triangle>(Triangle*);Triangle::~Triangle()<0000000000026590>;std::shared_ptr<TexturePNG>::~shared_ptr();std::__shared_ptr<TexturePNG, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr();std::enable_if<__and_<std::__not_<std::__is_tuple_like<Triangle_Modifier*> >, std::is_move_constructible<Triangle_Modifier*>, std::is_move_assignable<Triangle_Modifier*> >::value, void>::type std::swap<Triangle_Modifier*>(Triangle_Modifier*&, Triangle_Modifier*&);std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;SDL_DYNAPI_entry;SDL_DYNAPI_entry;SDL_DYNAPI_entry;__driDriverGetExtensions_d3d12<00000000000b3480>;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_drm_screen_create;nouveau_bufctx_reset<0000000000005ca0> 1
_start<000000000000acf0>;__libc_start_main@GLIBC_2.2.5;__libc_init_first@@GLIBC_2.2.5<0000000000023240>;main<000000000000adf0>;Engine_3D::engine_update()<0000000000023a00>;Renderer::refreshScreen(std::shared_ptr<TrianglePipeline>)<0000000000068c20>;Renderer::drawFilledTriangle2d(Triangle)<0000000000067450>;TexturemapRasterizer::drawFlatBottomTri(Triangle&);TexturemapRasterizer::drawFlatBottomTri(Triangle&)<0000000000064250>;TexturePNG::getPixelAtUV(float const&, float const&, SDL_Color&)<0000000000047d40> 1
